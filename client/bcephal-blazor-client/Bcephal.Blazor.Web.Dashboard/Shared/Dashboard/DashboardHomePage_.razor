
@RenderContent


@code {

    string cssclass1 = "d-flex flex-row justify-content-center align-items-center w-100 h-100";
    string cssclass2 = "d-flex flex-column justify-content-center align-items-center bc-h-60";


    string cssclass3 = "d-flex flex-column justify-content-center align-items-start ml-1";

    string cssclass4 = "d-flex flex-column justify-content-center align-items-center h-100 w-100";
    string cssclass5 = "d-flex flex-row justify-content-center align-items-center h-100 w-100";

    string bordernone = "0px !important";
    string bordervisible = "1px solid #e3e3e3 !important";
    public RenderFragment RenderContent => __builder =>
    {


    <div class="h-100 d-flex flex-column  p-0" >
        <div class="@(CanShowHeader ? cssclass1 : cssclass2)" >
            @if (CanShowHeader)
            {
                 string usermessagestyle = "";
                @if (!string.IsNullOrWhiteSpace(UserMessage) && UserMessage.Contains("<p>") && UserMessage.Contains("</p>"))
                {
                    usermessagestyle = cssclass4;
                }
                else
                {
                    usermessagestyle = cssclass5;
                }
                <div class="@usermessagestyle">
                    @((MarkupString)UserMessage)
                </div>
            }
            else
            {
                <HtmlEditorCustom @bind-UserMessage=UserMessage />
            }

        </div>
        @if (!CanShowHeader && Variables !=null && Variables.Count > 3)
            {
            <div class="@cssclass3" style="height:40% !important;">
                <DxStackLayout  Orientation="Orientation.Vertical" ItemSpacing="8px">
                    <Items>
                        <DxStackLayoutItem Length="0.5fr">
                            <Template>
                                <span class="mb-1 font-weight-bold" style="font-size:14px;">@AppState["VARIABLES"]</span>
                            </Template>
                        </DxStackLayoutItem>
                        <DxStackLayoutItem CssClass="ml-2" Length="0.5fr">
                            <Template>
                                <div class="d-inline-block">
                                    <a @onclick="()=>UpdateUserMessage(Variables.ElementAt(0))" style="font-size:14px;"><i class="fa fa-files-o mr-2" aria-hidden="true" style="cursor:pointer;"></i>@Variables.ElementAt(0)</a>
                                </div>
                            </Template>
                        </DxStackLayoutItem>
                        <DxStackLayoutItem CssClass="ml-2" Length="0.5fr">
                            <Template>
                                <div class="d-inline-block">
                                    <a @onclick="()=>UpdateUserMessage(Variables.ElementAt(1))" style="font-size:14px;"><i class="fa fa-files-o mr-2" aria-hidden="true" style="cursor:pointer;"></i>@Variables.ElementAt(1)</a>
                                </div>
                            </Template>
                        </DxStackLayoutItem>
                        <DxStackLayoutItem CssClass="ml-2" Length="0.5fr">
                            <Template>
                                <div class="d-inline-block">
                                    <a @onclick="()=>UpdateUserMessage(Variables.ElementAt(2))" style="font-size:14px;"><i class="fa fa-files-o mr-2" aria-hidden="true" style="cursor:pointer;"></i>@Variables.ElementAt(2)</a>
                                </div>
                            </Template>
                        </DxStackLayoutItem>
                        <DxStackLayoutItem CssClass="ml-2" Length="0.5fr">
                            <Template>
                                <div class="d-inline-block">
                                    <a @onclick="()=>UpdateUserMessage(Variables.ElementAt(3))" style="font-size:14px;"><i class="fa fa-files-o mr-2" aria-hidden="true" style="cursor:pointer;"></i>@Variables.ElementAt(3)</a>
                                </div>
                            </Template>
                        </DxStackLayoutItem>
                    </Items>
                </DxStackLayout>
            </div>
            }

    </div>

       };
}
