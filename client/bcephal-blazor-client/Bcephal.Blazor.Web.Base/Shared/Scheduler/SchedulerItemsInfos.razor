@typeparam P

@RenderScheduleItemsInfosContent

@code {

    string CssClass = "w-100";
    string Length = "1fr";
    string loadCssSm = "d-flex flex-column h-100 w-auto mr-auto ml-1 w-auto";
    string loadCssLg = "d-flex flex-column h-100 w-auto mr-auto ml-4 w-auto";
    string HeightSm = "auto";
    string HeightLg = "7%";

    string Col1 = "200px";
    string Col2 = "300px";
    string Col3 = "300px";

    public RenderFragment RenderScheduleItemsInfosContent => __builder =>
    {
    
        <DxLayoutBreakpoint DeviceSize="DeviceSize.Medium | DeviceSize.Small | DeviceSize.XSmall" @bind-IsActive="IsSmallScreen" />
        <DxGridLayout CssClass="w-100 h-auto" RowSpacing="10px" ColumnSpacing="10px">
            <Rows>
                <DxGridLayoutRow Areas="R3" Height="auto" />
                <DxGridLayoutRow Areas="R4" Height="auto" />
                <DxGridLayoutRow Areas="R5" Height="auto" />
                <DxGridLayoutRow Areas="R6" Height="auto" />
                <DxGridLayoutRow Areas="R2" Height="auto" />
            </Rows>
            <Columns>
                <DxGridLayoutColumn Width="100%" />
            </Columns>
            <Items>
                <DxGridLayoutItem Area="R2" Visible="@EditorData.Item.Scheduled">
                    <Template>
                        @if (ChildR2Content != null)
                        {
                            @ChildR2Content(this)
                        }
                    </Template>
                </DxGridLayoutItem>
                <DxGridLayoutItem Area="R3" CssClass="@(IsSmallScreen ? "h-100" : "bc-mh-50")">
                    <Template>
                        <DxGridLayout CssClass="@(IsSmallScreen ? "h-100" : "bc-mh-50")" ColumnSpacing="10px">
                            <Rows>
                                @if (IsSmallScreen)
                                {
                                    <DxGridLayoutRow Areas="R1NameValue" Height="@HeightSm" />
                                }
                                else
                                {
                                    <DxGridLayoutRow Areas="R1Name R1NameValue R1NameValuelargeScreen" Height="@HeightLg" />
                                }
                            </Rows>
                            <Columns>
                                @if (IsSmallScreen)
                                {
                                    <DxGridLayoutColumn Width="0.5fr" />
                                }
                                else
                                {
                                    <DxGridLayoutColumn Width="@Col1" />
                                    <DxGridLayoutColumn Width="@Col2" />
                                    <DxGridLayoutColumn Width="@Col3" />
                                }
                            </Columns>
                            <Items>
                                <DxGridLayoutItem Visible="@(!IsSmallScreen)" Area="R1Name" />
                                <DxGridLayoutItem Area="R1NameValue">
                                    <Template>
                                        <div class="d-flex flex-column h-100" style="margin-left:@(IsSmallScreen ? "0.25rem" : "0px");margin-top:@(IsSmallScreen ? "1rem" : "0px");">
                                            <DxCheckBox Enabled=Editable CssClass="w-auto mt-auto mb-auto" @bind-Checked=Active Alignment="CheckBoxContentAlignment.Left">
                                                <span class="ml-auto">@AppState["Active"]</span>
                                            </DxCheckBox>
                                        </div>
                                    </Template>
                                </DxGridLayoutItem>
                                <DxGridLayoutItem Visible="@(!IsSmallScreen)" Area="R1NameValuelargeScreen" />
                            </Items>
                        </DxGridLayout>
                    </Template>
                </DxGridLayoutItem>
                <DxGridLayoutItem Area="R4">
                    <Template>
                        <DxGridLayout ColumnSpacing="10px">
                            <Rows>
                                @if (IsSmallScreen)
                                {
                                    <DxGridLayoutRow Areas="R1NameValue" Height="@HeightSm" />
                                }
                                else
                                {
                                    <DxGridLayoutRow Areas="R1Name R1NameValue R1NameValue " Height="@HeightLg" />
                                }
                            </Rows>
                            <Columns>
                                @if (IsSmallScreen)
                                {
                                    <DxGridLayoutColumn Width="0.5fr" />
                                }
                                else
                                {
                                    <DxGridLayoutColumn Width="@Col1" />
                                    <DxGridLayoutColumn Width="@Col2" />
                                    <DxGridLayoutColumn Width="@Col3" />
                                }
                            </Columns>
                            <Items>
                                <DxGridLayoutItem Visible="@(!IsSmallScreen)" Area="R1Name" />
                                <DxGridLayoutItem Area="R1NameValue">
                                    <Template>
                                        <div class="d-flex flex-column h-100" style="margin-left:@(IsSmallScreen ? "0.25rem" : "0px");margin-top:@(IsSmallScreen ? "1rem" : "0px");">
                                            <DxCheckBox Enabled=Editable CssClass="w-auto mt-auto mb-auto" @bind-Checked=Scheduled Alignment="CheckBoxContentAlignment.Left">
                                                <span class="ml-auto">@AppState["Scheduled"]</span>
                                            </DxCheckBox>
                                        </div>
                                    </Template>
                                </DxGridLayoutItem>
                            </Items>
                        </DxGridLayout>
                    </Template>
                </DxGridLayoutItem>
                <DxGridLayoutItem Area="R5" Visible="@EditorData.Item.Scheduled">
                    <Template>
                        <DxGridLayout ColumnSpacing="10px">
                            <Rows>
                                @if (IsSmallScreen)
                                {
                                    <DxGridLayoutRow Areas="R1Name" Height="@HeightSm" />
                                    <DxGridLayoutRow Areas="R1NameValue" Height="@HeightSm" />
                                    <DxGridLayoutRow Areas="R1NameValue2" Height="@HeightSm" />
                                }
                                else
                                {
                                    <DxGridLayoutRow Areas="R1Name R1NameValue R1NameValue2" Height="@HeightSm" />
                                }
                            </Rows>
                            <Columns>
                                @if (IsSmallScreen)
                                {
                                    <DxGridLayoutColumn Width="0.5fr" />
                                }
                                else
                                {
                                    <DxGridLayoutColumn Width="@Col1" />
                                    <DxGridLayoutColumn Width="@Col2" />
                                    <DxGridLayoutColumn Width="@Col3" />
                                }
                            </Columns>
                            <Items>
                                <DxGridLayoutItem Area="R1Name">
                                    <Template>
                                        <div class="d-flex flex-column h-100">
                                            <label class="@(IsSmallScreen ? "mr-1 ml-1 mt-4 mb-auto text-right" : "mr-1 ml-1 mt-auto mb-auto text-right")">@AppState["cron.expression"]</label>
                                        </div>
                                    </Template>
                                </DxGridLayoutItem>
                                <DxGridLayoutItem Area="R1NameValue">
                                    <Template>
                                        <div class="d-flex flex-column h-100" style="margin-left:@(IsSmallScreen ? "0.25rem" : "0px");margin-top:@(IsSmallScreen ? "1rem" : "0px");">
                                            <DxTextBox ReadOnly=!Editable CssClass="mt-auto mb-auto" @bind-Text=CronExpression />
                                        </div>
                                    </Template>
                                </DxGridLayoutItem>
                                <DxGridLayoutItem CssClass="d-flex flex-row" Area="R1NameValue2">
                                    <Template>
                                        <div class="d-flex flex-column h-100" style="margin-left:@(IsSmallScreen ? "0.25rem" : "0px");margin-top:@(IsSmallScreen ? "1rem" : "0px");">
                                            <a style="margin-top:auto;margin-bottom:auto;" href="https://freeformatter.com/cron-expression-generator-quartz.html" title="@AppState["cron.expression"]" target="_blank"><i class="bi bi-question-circle"></i></a>
                                        </div>
                                    </Template>
                                </DxGridLayoutItem>
                            </Items>
                        </DxGridLayout>
                    </Template>
                </DxGridLayoutItem>
                <DxGridLayoutItem Area="R6">
                    <Template>
                        @if (ChildR6Content != null)
                        {
                            @ChildR6Content(this)
                        }
                    </Template>
                </DxGridLayoutItem>
            </Items>
        </DxGridLayout>
    };
}
