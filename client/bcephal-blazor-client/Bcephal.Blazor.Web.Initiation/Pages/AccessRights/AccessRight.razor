@page  "/access-rights"

@using Bcephal.Models.Profiles
@using Bcephal.Blazor.Web.Base.Shared
@using Bcephal.Blazor.Web.Base.Services

@inherits Form<ProfileProject, AccessRightEditorData>

@{base.BuildRenderTree(__builder);}

@code {
    private RenderFragment LeftContent___ => __builder =>
    {
    <div class="card-body model-form-card-body border-top overflow-y-auto">
        <DxStackLayout ItemSpacing="8px" Orientation=Orientation.Vertical>
            <Items>
                <DxStackLayoutItem Length="auto">
                    <Template>
                        <div class="row m-0 p-0 h-100">
                            <div class="col p-0 d-flex flex-column">
                                <DxListBox Id="prof" Data="GetEditorData.Profiles"
                                           TextFieldName="Name"
                                           SelectionMode="ListBoxSelectionMode.Multiple"
                                           ShowCheckboxes="@ShowCheckboxes"
                                           CssClass="w-auto mt-1 mr-1 ml-1 h-100 border-0"
                                           @bind-Values="@AddingProfiles">
                                </DxListBox>
                            </div>
                        </div>
                    </Template>
                </DxStackLayoutItem>
            </Items>
        </DxStackLayout>
    </div>
    };
    private RenderFragment RightContent___ => __builder =>
    {
        <div class="card-body model-form-card-body border-top border-left overflow-y-auto">
            <DxStackLayout ItemSpacing="8px" Orientation=Orientation.Vertical>
                <Items>
                    <DxStackLayoutItem Length="auto">
                        <Template>
                            <div class="row m-0 p-0 h-100">
                                <div class="col p-0 d-flex flex-column">
                                    <DxListBox Id="roles" Data="GetEditorData.ItemListChangeHandler.Items"
                                               TextFieldName="Name"
                                               SelectionMode="ListBoxSelectionMode.Multiple"
                                               ShowCheckboxes="@ShowCheckboxes"
                                               CssClass="w-auto mt-1 mr-1 ml-1 h-100 border-0"
                                               @bind-Values="@DeletingProfiles">
                                    </DxListBox>
                                </div>
                            </div>
                        </Template>
                    </DxStackLayoutItem>
                </Items>
            </DxStackLayout>
        </div>
    };

    private RenderFragment LeftHeaderContent___ => __builder =>
    {
    <div class="card-header bg-white d-flex flex-column p-0 border-0">
        <span class="mx-auto mt-2">
            @AppState["Profiles.Available"]
        </span>
        <div class="p-2">
            <DxToolbar ItemRenderStyleMode="ToolbarRenderStyleMode.Contained">
                <DxToolbarItem RenderStyle="ButtonRenderStyle.Primary" Text="@AppState["Select.All"]" @onclick="SelectAllAdding" />
                <DxToolbarItem RenderStyle="ButtonRenderStyle.Dark" Text="@AppState["Add.Selected"]" @onclick="HandlerAddingProfiles"
                               Alignment="ToolbarItemAlignment.Right" BeginGroup="false" />
            </DxToolbar>
        </div>
    </div>
    };

    private RenderFragment RightHeaderContent___ => __builder =>
    {
    <div class="card-header bg-white d-flex flex-column p-0 border-0">
        <span class="mx-auto mt-2">
            @AppState["Profiles.Selected"]
        </span>
        <div class="p-2">
            <DxToolbar ItemRenderStyleMode="ToolbarRenderStyleMode.Contained">
                <DxToolbarItem RenderStyle="ButtonRenderStyle.Primary" Text="@AppState["Select.All"]" @onclick="SelectAllDeleting" />
                <DxToolbarItem RenderStyle="ButtonRenderStyle.Danger" Text="@AppState["remove"]" @onclick="HandlerRemovingProfiles"
                               Alignment="ToolbarItemAlignment.Right" BeginGroup="false" />
            </DxToolbar>
        </div>
    </div>
    };

    private RenderFragment LeftBodyContent___ => __builder =>
    {
    <div class="card w-100 h-100 border-0 pr-1">
        @LeftHeaderContent___
        @LeftContent___
    </div>
    };

    private RenderFragment RightBodyContent___ => __builder =>
    {
    <div class="card w-100 h-100 border-0 pl-1">
        @RightHeaderContent___
        @RightContent___
    </div>
    };


    public override RenderFragment LeftContent => __builder =>
    {
    @if (EditorData != null)
        {
            var panel = new List<RenderFragment>()
        {
                LeftBodyContent___,
                RightBodyContent___
                                                                };
        <SplitterPanel LeftSize="1" Panes=panel />
        }
    };

    public override RenderFragment RightContent => CurrentRightContent;
}
