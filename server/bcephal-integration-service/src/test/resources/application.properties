
xParam=220

info.name=${spring.application.name}
info.version=${version}

logging.level.root=INFO
logging.level.com.moriset.bcephal=TRACE
logging.level.org.springframework=ERROR
logging.level.org.springframework.boot.web.embedded.tomcat=INFO
logging.level.com.fasterxml.jackson=TRACE
logging.level.com.zaxxer.hikari=ERROR


# JACKSON
# spring.jackson.serialization.indent_output=true
# spring.jackson.serialization.write_dates_as_timestamps=false
# spring.jackson.mapper.accept_case_insensitive_properties=true
#spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false;
#spring.jackson.serialization.WRITE_BIGDECIMAL_AS_PLAIN=true
#spring.jackson.serialization.WRITE_ENUMS_USING_INDEX=false
#spring.jackson.serialization.WRITE_ENUMS_USING_TO_STRING=true


# Whether to always apply the MessageFormat rules, parsing even messages without arguments.
spring.messages.always-use-message-format=false
 
# Comma-separated list of basenames
spring.messages.basename=messages,errors
  
# Message bundles encoding.
spring.messages.encoding=UTF-8
 
# Whether to fall back to the system Locale 
# if no files for a specific Locale have been found.
spring.messages.fallback-to-system-locale=false
 
# Whether to use the message code as the default message instead of throwing a "NoSuchMessageException". 
# Recommended during development only.
spring.messages.use-code-as-default-message=true

# upload file size

spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# DataSource
#spring.datasource.url=jdbc:postgresql://localhost:5433/bcephal_security
spring.datasource.url=jdbc:postgresql://192.168.100.93:5433/
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=postgres
spring.datasource.password=123456

#spring.datasource.type=com.zaxxer.hikari.HikariDataSource
#spring.datasource.maximum-pool-size=3

# Hibernate
spring.jpa.database=postgresql
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=none

#spring.datasource.hikari.maximum-pool-size=8
#spring.datasource.hikari.idle-timeout=
#maximum number of milliseconds that a client will wait for a connection
spring.datasource.hikari.connection-timeout=60000
#minimum number of idle connections maintained by HikariCP in a connection pool
spring.datasource.hikari.minimum-idle=0
#maximum pool size
spring.datasource.hikari.maximum-pool-size=3
#maximum idle time for connection
spring.datasource.hikari.idle-timeout=10000
# maximum lifetime in milliseconds of a connection in the pool after it is closed.
spring.datasource.hikari.max-lifetime=30000
spring.datasource.hikari.leak-detection-thleshold=3000

# protocol fro production
#-bcephal-protocol=
bcephal-protocol=http
eureka-protocol=http


#default port 8761
#eureka.instance.nonSecurePortEnabled=false
#eureka.instance.securePortEnabled=true
eureka.server.port=8761
eureka.instance.hostname=192.168.100.55
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.serviceUrl.defaultZone=${eureka-protocol}://${eureka.instance.hostname}:${eureka.server.port}/eureka/

#eureka.instance.secure-port=8762
#eureka.instance.statusPageUrl=${eureka-protocol}://${eureka.instance.hostname}:${eureka.server.port}/info
#eureka.instance.healthCheckUrl=${eureka-protocol}://${eureka.instance.hostname}:${eureka.server.port}/health
#eureka.instance.homePageUrl=${eureka-protocol}://${eureka.instance.hostname}${eureka.server.port}/

#http.client.ssl.trust-store=classpath:bcephalsecurity.jks
#http.client.ssl.trust-store=_bcphlD_.541

#eureka.client.prefer-ip-address=true

#http or https
gateway-protocol=${bcephal-protocol}
gateway-host=localhost
gateway-port=9000

activemq.enable=true
activemq.address.ip=localhost
activemq.address.tcp-port=61627
activemq.address.stomp-port=61628

bcephal.project.data-dir=${user.home}/.bcephal/8/projects/data
bcephal.project.archive-dir=${user.home}/.bcephal/8/archives
bcephal.project.temp-dir=${java.io.tmpdir}/bcephal/8/temp


# configuration for keycloak
keycloak.enabled=true
keycloak.realm=bcephalRealm
keycloak.resource=bcephal
keycloak.credentials.secret=33760241-b2f1-481b-b1a1-6e2b2938145e
keycloak.auth-server-url=http://192.168.100.93:8181/auth
keycloak.always-refresh-token=true

#configuration of cross origin
keycloak.cors=true
keycloak.cors-max-age=0
keycloak.cors-allowed-methods=*
keycloak.cors-allowed-headers=*
keycloak.cors-exposed-headers=*
keycloak.principal-attribute=preferred_username
#keycloak.cors-allowed-methods=POST, PUT, DELETE, GET
#keycloak.cors-allowed-headers=X-Requested-With, Content-Type, Authorization, Origin, Accept, Access-Control-Request-Method, Access-Control-Request-Headers  

spring.security.oauth2.resourceserver.jwt.issuer-uri=${keycloak.auth-server-url}/realms/${keycloak.realm}
spring.security.oauth2.client.registration.keycloak.client-id=${keycloak.resource}
spring.security.oauth2.client.registration.keycloak.client-secret=${keycloak.credentials.secret}
spring.security.oauth2.client.provider.keycloak.issuer-uri=${keycloak.auth-server-url}/realms/${keycloak.realm}
spring.security.oauth2.client.provider.keycloak.user-name-attribute: preferred_username

#for docker config
#bcephal.enable.proxy=false
##keycloak.proxy-url=http://localhost:8181/auth
##server.servlet.session.cookie.domain=
##server.use-forward-headers=true
##server.tomcat.remote-ip-header=x-forwarded-for
##server.tomcat.protocol-header=x-forwarded-proto
##server.tomcat.proxy-name=
##server.tomcat.proxy-port=


#server.ssl.enabled=true
#server.ssl.key-store=classpath:bcephalsecurity.jks
#server.ssl.key-store-password=_bcphlD_.541
#server.ssl.keyStoreType=JKS
#server.ssl.key-alias=bcephal-alias
#security.require-ssl=true
## need or none
#server.ssl.client-auth=none
## SSL protocol to use
#server.ssl.protocol=TLS
## Enabled SSL protocols
#server.ssl.enabled-protocols=TLSv1.2
#server.tomcat.remote_ip_header=x-forwarded-for
#server.tomcat.protocol_header=x-forwarded-proto


