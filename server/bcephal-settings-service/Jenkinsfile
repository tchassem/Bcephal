pipeline {
    agent any
	tools {
	   jdk 'JAVA_HOME'
	    gradle 'GRADLE_HOME'
		 dockerTool 'CustomeDocker'
	} 
	   
	environment {
	   DOCKER    = "${dockerTool1}/bin"
	    JAVA_HOME = "${jdk}"
		
		
	}
    
    stages {
        stage('Clone'){
             steps {
			  dir('bcephal-grid'){
				 checkout([$class: 'GitSCM', branches: [[name: '*/master']],
					doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'CloneOption', depth: 1, noTags: true, reference: '', shallow: true, timeout: 120]], 
					submoduleCfg: [],userRemoteConfigs: [[credentialsId: 'e212babc-0713-415a-9848-da7292bb3718', url:
					 'http://saas1402fu.saas-secure.com/git/bcephal-grid.git']]])
					 }
				 sh ('ls')
				 
				 dir('bcephal-base'){
					 checkout([$class: 'GitSCM', branches: [[name: '*/master']],
					doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'CloneOption', depth: 1, noTags: true, reference: '', shallow: true, timeout: 120]], 
					submoduleCfg: [],userRemoteConfigs: [[credentialsId: 'e212babc-0713-415a-9848-da7292bb3718', url:
					 'http://saas1402fu.saas-secure.com/git/bcephal-base.git']]])
				 }
				 sh ('ls')
				 
				 dir('bcephal-chat'){
					 checkout([$class: 'GitSCM', branches: [[name: '*/master']],
					doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'CloneOption', depth: 1, noTags: true, reference: '', shallow: true, timeout: 120]], 
					submoduleCfg: [],userRemoteConfigs: [[credentialsId: 'e212babc-0713-415a-9848-da7292bb3718', url:
					 'http://saas1402fu.saas-secure.com/git/bcephal-chat.git']]])
					 }
					  sh ('ls')
					 dir('bcephal-multitenant-jpa'){
					 checkout([$class: 'GitSCM', branches: [[name: '*/master']],
					doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'CloneOption', depth: 1, noTags: true, reference: '', shallow: true, timeout: 120]], 
					submoduleCfg: [],userRemoteConfigs: [[credentialsId: 'e212babc-0713-415a-9848-da7292bb3718', url:
					 'http://saas1402fu.saas-secure.com/git/bcephal-multitenant-jpa.git']]])
					 }
				 sh ('ls')
				 dir('bcephal-utils'){
					 checkout([$class: 'GitSCM', branches: [[name: '*/master']],
					doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'CloneOption', depth: 1, noTags: true, reference: '', shallow: true, timeout: 120]], 
					submoduleCfg: [],userRemoteConfigs: [[credentialsId: 'e212babc-0713-415a-9848-da7292bb3718', url:
					 'http://saas1402fu.saas-secure.com/git/bcephal-utils.git']]])
				 }
				 sh ('ls')
				 
				 dir('bcephal-sso'){
					  checkout([$class: 'GitSCM', branches: [[name: '*/master']],
					doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'CloneOption', depth: 1, noTags: true, reference: '', shallow: true, timeout: 120]], 
					submoduleCfg: [],userRemoteConfigs: [[credentialsId: 'e212babc-0713-415a-9848-da7292bb3718', url:
					 'http://saas1402fu.saas-secure.com/git/bcephal-sso.git']]])
				 }
				 sh ('ls')
				 
				 dir('bcephal-security-base'){
					  checkout([$class: 'GitSCM', branches: [[name: '*/master']],
					doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'CloneOption', depth: 1, noTags: true, reference: '', shallow: true, timeout: 120]], 
					submoduleCfg: [],userRemoteConfigs: [[credentialsId: 'e212babc-0713-415a-9848-da7292bb3718', url:
					 'http://saas1402fu.saas-secure.com/git/bcephal-security-base.git']]])
				 }
				 
				 dir('bcephal-join'){
					checkout([$class: 'GitSCM', branches: [[name: '*/master']],
					doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'CloneOption', depth: 1, noTags: true, reference: '', shallow: true, timeout: 120]], 
					submoduleCfg: [],userRemoteConfigs: [[credentialsId: 'e212babc-0713-415a-9848-da7292bb3718', url:
					 'http://saas1402fu.saas-secure.com/git/bcephal-join.git']]])
				 }
				 dir('bcephal-settings-service'){
                checkout([$class: 'GitSCM', branches: [[name: '*/master']],
                doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'CloneOption', depth: 1, noTags: true, reference: '', shallow: true, timeout: 120]], 
				submoduleCfg: [],userRemoteConfigs: [[credentialsId: 'e212babc-0713-415a-9848-da7292bb3718', url:
                 'http://saas1402fu.saas-secure.com/git/bcephal-settings-service.git']]])
				 }
			 }
        }
            
        stage('Build') {
		
            steps {	
			dir('bcephal-settings-service'){
            	sh 'chmod +x gradlew'                
                gradlew('clean', 'assemble')
				//sh 'ls build/libs/'
				}
            }
        }
      //   stage('SonarQube analysis') {
         //   steps {	
          //  dir('bcephal-settings-service'){
	        //     withSonarQubeEnv('SonarQube') {
	         //       sh './gradlew sonar'
	         //      }
           
          //    }
         //   }
      //  }  
		stage('Unit Tests') {
					steps {
					  script{
						 try {
							 dir('bcephal-settings-service'){
								
							  sh 'chmod +x gradle' 
							  sh './gradlew test --tests com.moriset.bcephal.settings.config.TestSuite'
							 
						  }
						}catch(exc) {
						 def summary = junit  skipPublishingChecks: true, testResults: '**/TEST-*.xml' 
							   sh "echo ${summary.totalCount}"
							   sh " echo ${summary.failCount}"
							   sh "echo ${summary.skipCount} " 
							   sh "echo ${summary.passCount} " 
							   def percentage = summary.passCount*100/summary.totalCount
							   sh "echo ${percentage}"
					     if ( ${percentage} < 98){
						    currentBuild.result = 'FAILURE'
					     }
						 currentBuild.result = 'SUCCESS'
						}
					 }
					}
				} 
       
		//stage('Assemble') {
         //   steps {
         //       gradlew('assemble')
          //      stash includes: '**/build/libs/*.jar', name: 'app'
          //  }
        //}
		 //stage('Docker build image') {
           // steps {
              // dockerCmd "build -t becphal-settings-service-docker-image:${env.BUILD_NUMBER} ."
            //   dockerCmd "save -o=becphal-settings-service-docker-image-${env.BUILD_NUMBER}.tar becphal-settings-service-docker-image:${env.BUILD_NUMBER}"
          // }
       // }
		//stage('Docker tag image latest') {
         // steps {
          // dockerCmd "tag becphal-settings-service-docker-image:${env.BUILD_NUMBER}  becphal-settings-service-docker-image:latest "
               
          // }
       //}
	   // stage('Docker tag ') {
          //steps {
          // dockerCmd "tag becphal-settings-service-docker-image localhost:5000/becphal-settings-service-docker-image "
               
          // }
         //}
	   // stage('Docker push image latest') {
          // steps {
             // dockerCmd "push localhost:5000/becphal-settings-service-docker-image"
               
            //}
        //}
		//stage('Docker run image') {
          // steps {
			
          //   dockerCmd "run  -tid -p 8014:8080  -v /opt/bcephal-settings-repository:/opt/bcephal-settings-repository -v /opt/bcephal-data:/opt/bcephal-data --env HOST_ADDRESS=${IP_HOST_ADDRESS} --name  becphal-settings-service  becphal-settings-service-docker-image"
          // sh 'docker ps'  
          //}
       // }
		//stage('Deploy app'){
			//steps{
			
					//script{
					//	kubernetesDeploy(configs:"deployment-settings-service.yml ", kubeconfigId:"kubeconfiguration")
						
					
					//}
				
			//}
		//}
	}
     post {
				always {
				 dir('/var/lib/jenkins/workspace/bcephal-settings-service/bcephal-settings-service/build/test-results/test/'){
					 junit  skipPublishingChecks: true, testResults: '**/TEST-*.xml'
					  sh 'ls'
				 }		 
			   }
			 failure {
				mail to: 'jwambo@moriset.com', subject: 'B-Cephal Configuration microservice build failed', body: 'B-Cephal Configuration microservice build failed.\nPlease fix!'
			}
		}
}

def gradlew(String... args) {
    sh "./gradlew ${args.join(' ')} -s"
}

def dockerCmd(args) {
    sh "echo ${tool 'CustomeDocker'}"
    sh "echo ${env.DOCKER_HOST}"
    sh "${tool 'CustomeDocker'}/bin/docker ${args}"
}