plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
	id "org.sonarqube" version "5.0.0.4638"
}

group = 'com.moriset'
version = '0.0.1'

java {
	sourceCompatibility = '21'
}

apply from: "$rootDir/gradle/integration-test.gradle"
apply from: "$rootDir/gradle/code-analysis.gradle"

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

ext {
	set('springCloudVersion', "2023.0.1")
	set('jasperreportsVersion', "6.20.0")
	set('poiVersion', "5.2.5")//5.0.0
}

bootJar {
  enabled = false
}

jar {
  enabled = true
}

dependencies {
	implementation project(':bcephal-alarm')
	implementation project(':bcephal-security-base')
	implementation project(':bcephal-base')
	implementation project(':bcephal-multitenant-jpa')
	implementation project(':bcephal-utils')
	implementation project(':bcephal-sso')	
	implementation project(':bcephal-grid')
	
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	    
    implementation'commons-io:commons-io:2.8.0'
    implementation "org.apache.poi:poi-ooxml:${poiVersion}"
    implementation 'org.apache.commons:commons-csv:1.8' 
    implementation 'jakarta.validation:jakarta.validation-api'  
      
    implementation "net.sf.jasperreports:jasperreports:${jasperreportsVersion}"
    
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	
	testImplementation 'com.h2database:h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

configurations { 
    all {
        exclude group: 'commons-logging', module: 'commons-logging'
        resolutionStrategy {
        	force 'com.lowagie:itext:2.1.7'
    	}
    } 
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
compileJava.dependsOn clean
